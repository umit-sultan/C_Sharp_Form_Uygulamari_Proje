<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FXUoP//Z
</value>
  </data>
</root>